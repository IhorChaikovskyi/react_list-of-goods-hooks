{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","isReversedHook","NONE","sortType","sortTypeHook","listGoods","goods","visibleGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","value","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAoCE,IAAME,EAAgB,WAC3B,MAAqCC,oBAAS,GAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAiCF,mBAASH,EAASM,MAAnD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EA7BD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENO,EAAY,YAAOD,GAkBzB,OAhBAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQP,GACN,KAAKP,EAASe,SACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKd,EAASiB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,QACE,OAAO,MAITd,GACFO,EAAaQ,UAGRR,EAOWS,CAChBnB,EAAiB,CAAEM,WAAUH,eAG/B,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYhB,IAAaP,EAASe,WAGtCS,QAAS,kBAAMhB,EAAaR,EAASe,WATvC,iCAcA,wBACEO,KAAK,SACLD,UAAWE,IACT,SACA,UACA,aACA,CACE,WAAYhB,IAAaP,EAASiB,SAGtCO,QAAS,kBAAMhB,EAAaR,EAASiB,SAVvC,4BAeA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,UACA,aACA,CACE,YAAanB,IAGjBoB,QAAS,kBAAMnB,GAAe,SAAAoB,GAAK,OAAKA,MAV1C,sBAeErB,GAAcG,IAAaP,EAASM,OAEpC,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPnB,GAAe,GACfG,EAAaR,EAASM,OAL1B,sBAcJ,6BAEIG,EAAUiB,KAAI,SAAAC,GAAI,OAChB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC7HpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9a507adc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, isReversedHook] = useState(false);\n  const [sortType, sortTypeHook] = useState(SortType.NONE);\n\n  const listGoods = getReorderedGoods(\n    goodsFromServer, { sortType, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={() => sortTypeHook(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            'is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={() => sortTypeHook(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            'is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={() => isReversedHook(value => !value)}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortType !== SortType.NONE)\n        && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              isReversedHook(false);\n              sortTypeHook(SortType.NONE);\n            }}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {\n          listGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}